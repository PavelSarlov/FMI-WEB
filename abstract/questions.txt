Номер: 1
Цел: Да се провери малко "обща култура".
Тип: 1
Въпрос: Какво е "Бандата на четиримата" (Gang of Four)?
Опция 1: Четиримата автори на книгата "Шаблони за дизайн - Елементи на обектно-ориентирания софтуер за многократно използване" (Gang of Four).
Опция 2: "Бандата на четиримата" е името на книга за софтуерните шаблони.
Опция 3: "Бандата на четиримата" е софтуерен шаблон.
Опция 4: Нито едно от изброените.
Ниво на трудност: 2
Верен отг.: Верен отговор. Отлично!
Грешен отг.: Грешка! За повече информация виж подсекция "Особености" на секция "Въведение" от реферата.
Забележка: През 1994 четирима автори - Ерик Гама, Ричард Хелм, Ралф Джонсън и Джон Влисидес - публикуват книга, озаглавена "Шаблони за дизайн - Елементи на Обектно-Ориентирания Софтуер за Многократно Използване", която дава основа на концепцията за шаблони в софтуерната разработка. Тези автори за познати като "Бандата на четиримата" (Gang of Four).

Номер: 2
Цел: Да се провери разбиране на предимствата и недостатъците на шаблона "Вегира отговорности".
Тип: 3
Въпрос: Кое от изброените представлява недостатък на шаблона "Верига отговорности"?
Опция 1: Някои заявки може да останат необработени.
Опция 2: Позволява управление на реда на обработка на заявките.
Опция 3: Спазва принципа за единствена отговороност.
Опция 4: Спазва принципа отворен/затворен.
Ниво на трудност: 1
Верен отг.: Верен отговор. Отлично!
Грешен отг.: Грешка! За повече информация виж секция "Верига отговорности (Chain of Responsibility)" от реферата.
Забележка: https://refactoring.guru/design-patterns/chain-of-responsibility

Номер: 3
Цел: Да се провери ясна ли е идеята на шаблона "Команда".
Тип: 3
Въпрос: Каква е идеята на шаблона "Команда"?
Опция 1: Идеята на шаблона е да се енкапсулира заявка като обект и по този начин клиентите да се параметризират с различни заявки, опашка или история от заявки и да поддържат операции за отмяна.
Опция 2: Идеята на шаблона е да се избегне тясната свързаност на подател на заявка с този, който ще я обработва, като се дава възможност на повече от един обект да я обработят. Обектите получатели се поставят в една верига и заявката се предава по нея, докато някой от тях я обработии.
Опция 3: Идеята на шаблона е да се даде възможност на обект да променя поведението си при промяна на неговото вътрешно състояние.
Опция 4: Идеята на шаблона е да се предостави начин за последователен достъп до елементите на агрегиран обект без да се разкрива вътрешната му репрезентация.
Ниво на трудност: 2
Верен отг.: Верен отговор. Отлично!
Грешен отг.: Грешка! За повече информация виж секция "Команда (Command)" от реферата.
Забележка: https://refactoring.guru/design-patterns/command

Номер: 4
Цел: Да се провери дали има предварителни знания за това какво са итераторите.
Тип: 1
Въпрос: Каквo е предназначението на итераторите в програмирането?
Опция 1: Предоставят начин за последователен достъп до елементите на даден обект.
Опция 2: Дефинират метод за достъпване на един определен член на класа.
Опция 3: Създават моментни снимки на своето състояние, чрез които да го възстановяват.
Опция 4: Дефинират скелет на логиката, която трябва да имплементират класовете.
Ниво на трудност: 1
Верен отг.: Верен отговор. Отлично!
Грешен отг.: Грешка! За повече информация виж секция "Итератор (Iterator)" от реферата.
Забележка: https://refactoring.guru/design-patterns/iterator

Номер: 5
Цел: Да се провери дали е ясна структурата на шаблона "Посредник".
Тип: 3
Въпрос: Кое НЕ е вярно за инстанциите на посредници в структурата на шаблона "Посредник"?
Опция 1: Задължително управляват само един компонент.
Опция 2: Енкапсулират връзките между различните компоненти.
Опция 3: Често пазят референции към всички компоненти, които управляват.
Опция 4: Понякога контролират жизнения цикъл на компонентите, които управляват.
Ниво на трудност: 2
Верен отг.: Верен отговор. Отлично!
Грешен отг.: Грешка! За повече информация виж секция "Посредник (Mediator)" от реферата.
Забележка: https://refactoring.guru/design-patterns/mediator

Номер: 6
Цел: Да се провери дали е ясна идеята на шаблона "Спомен".
Тип: 3
Въпрос: Какво се постига с шаблона "Спомен"?
Опция 1: Без нарушение на капсулацията се обхваща вътрешното състояние на даден обект с цел неговото възстановяване на по-късен етап.
Опция 2: Дефинира се обект, който обхваща взаимодействията между множество други обекти.
Опция 3: Предоставя се начин за последователен достъп до елементите на структура от данни.
Опция 4: Избягва се тясната свързаност между подател на заявка и нейния обработвател.
Ниво на трудност: 1
Верен отг.: Верен отговор. Отлично!
Грешен отг.: Грешка! За повече информация виж секция "Спомен (Memento)" от реферата.
Забележка: https://refactoring.guru/design-patterns/memento

Номер: 7
Цел: Да се провери дали е ясна идеята на шаблона "Наблюдател".
Тип: 3
Въпрос: Кое от следните правилно описва шаблона "Наблюдател"?
Опция 1: Идеята на шаблона е да се дефинира връзка "един към много" между обектите и при промяна в състоянието на един от тях всички други да бъдат уведомени автоматично.
Опция 2: Този шаблон се използва за възстановяване на състоянието на даден обект.
Опция 3: "Наблюдател" се използва с цел намаляване на сложната комуникация между множество обекти или класове.
Опция 4: Идеята на шаблона е да се предостави начин за последователен достъп до елементите на сложна структура от данни без да се взима предвид нейната вътрешна структура.
Ниво на трудност: 2
Верен отг.: Верен отговор. Отлично!
Грешен отг.: Грешка! За повече информация виж секция "Наблюдател (Observer)" от реферата.
Забележка: https://refactoring.guru/design-patterns/observer

Номер: 8
Цел: Да се провери дали е ясно какво представлява шаблонът "Състояние".
Тип: 3
Въпрос: Кое от следните твърдения описва шаблона "Състояние" правилно?
Опция 1: При този шаблон поведението на даден клас се изменя спрямо неговото състояние.
Опция 2: При този шаблон абстрактен клас излага дефинирани начини / шаблони за изпълнение на методите му.
Опция 3: При този шаблон поведението на класа или алгоритъма му може да се промени по време на изпълнение.
Опция 4: При този шаблон нулев обект замества проверка за нулева инстанция на обект.
Ниво на трудност: 2
Верен отг.: Верен отговор. Отлично!
Грешен отг.: Грешка! За повече информация виж секция "Състояние (State)" от реферата.
Забележка: https://refactoring.guru/design-patterns/state

Номер: 9
Цел: Да се провери дали е схваната идеята на шаблона "Стратегия".
Тип: 3 
Въпрос: При кой от следните шаблони поведението на класа или неговия алгоритъм може да бъде променен по време на изпълнение?
Опция 1: Стратегия (Strategy)
Опция 2: Състояние (State)
Опция 3: Шаблонен метод (Template method)
Опция 4: Верига отговорности (Chain of Responsibility)
Ниво на трудност: 1
Верен отг.: Верен отговор. Отлично!
Грешен отг.: Грешка! За повече информация виж секция "Стратегия (Strategy)" от реферата.
Забележка: https://refactoring.guru/design-patterns/strategy

Номер: 10
Цел: Да се провери дали се чете дословно, включително и коментарите от примерния код.
Тип: 3
Въпрос: При използването на кой структурен шаблон ще усетите най-големия плюс от "Посетител"?
Опция 1: Композиция (Composite)
Опция 2: Мост (Bridge)
Опция 3: Адаптер (Adapter)
Опция 4: Фасада (Facade)
Ниво на трудност: 5
Верен отг.: Верен отговор. Отлично!
Грешен отг.: Грешка! За повече информация виж подсекции "Структура" и "Примерна имплементация" на секция "Посетител (Visitor)" от реферата.
Забележка: https://refactoring.guru/design-patterns/visitor
